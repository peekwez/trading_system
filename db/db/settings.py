"""
Django settings for db project.

Generated by 'django-admin startproject' using Django 1.8.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from __future__ import absolute_import

import os
import platform
import sys

from datetime import timedelta
from celery.schedules import crontab

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '8s$2@yh$_94-at7=^b*k9$1pat!b0skg1tzzqglvv&&xrzsm8v'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (

    # django apps
    'django.contrib.admin',
    'django.contrib.admindocs',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # vendor apps
    'django_extensions',

    # my apps
    'data',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'db.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'db.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': "securities_master",
        'PASSWORD': "",
        'USER': "postgres",
        'HOST': "localhost",
        'PORT': "5433",
    }
}

# Celery redis broker
BROKER_URL = "redis://localhost:6380"
CELERY_RESULT_BACKEND = "redis://localhost:6380"
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'EST'

CELERYBEAT_SCHEDULE = {
    'update-prices-every-10-minutes': {
        'task': 'data.tasks.update_prices',
        'schedule': crontab(minute='*/10',
                            hour='9-18',
                            day_of_week='mon-fri'),
        'args': (),
    },
    'add-historical-prices-once-a-year': {
        'task': 'data.tasks.add_historical_prices',
        'schedule': crontab(day_of_week='mon',
                            day_of_month='1-7',
                            month_of_year='1'),
        'args': (),
    },
    'update-symbols-once-a-month': {
        'task': 'data.tasks.update_security_symbols',
        'schedule': crontab(day_of_week='mon',
                            day_of_month='1-7',
                            month_of_year='*/1'),
        'args': (),
    }
}

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'EST'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

GRAPH_MODELS = {
    'all_applications': True,
    'group_models': True,
}

SHELL_PLUS_POST_IMPORTS = (
    ('data.tasks', ('update_prices', 'update_securities_symbols',
                    'add_historical_prices')),
    ('data.utils', ('prices', 'symbols', 'exchanges')),
)
